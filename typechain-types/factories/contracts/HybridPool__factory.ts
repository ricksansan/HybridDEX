/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  HybridPool,
  HybridPoolInterface,
} from "../../contracts/HybridPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpTokens",
        type: "uint256",
      },
    ],
    name: "AddLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpTokens",
        type: "uint256",
      },
    ],
    name: "RemoveLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isToken0",
        type: "bool",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    inputs: [],
    name: "MINIMUM_LIQUIDITY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount1Desired",
        type: "uint256",
      },
    ],
    name: "addLiquidityETH",
    outputs: [
      {
        internalType: "uint256",
        name: "lpTokens",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lpBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lpTokens",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reserve0",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserve1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "setSwapFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
    ],
    name: "swapExactToken0ForToken1",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
    ],
    name: "swapExactToken1ForToken0",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalLPTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405260036004553480156200001657600080fd5b506040516200233d3803806200233d83398181016040528101906200003c91906200021d565b60016000819055506200006462000058620000e560201b60201c565b620000ed60201b60201c565b6200007533620000ed60201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050505062000264565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001e582620001b8565b9050919050565b620001f781620001d8565b81146200020357600080fd5b50565b6000815190506200021781620001ec565b92915050565b60008060408385031215620002375762000236620001b3565b5b6000620002478582860162000206565b92505060206200025a8582860162000206565b9150509250929050565b60805160a051612082620002bb600039600081816106cf015281816108b401528181610a9b01528181610c7e0152610ffa01526000818161062e0152818161095501528181610d7c0152610dff01526120826000f3fe6080604052600436106100fe5760003560e01c8063715018a611610095578063ad5c464811610064578063ad5c46481461034c578063ba9a7a5614610377578063d06d04cc146103a2578063ef6283d9146103d2578063f2fde38b146103fd576100fe565b8063715018a6146102a157806389a30271146102b85780638da5cb5b146102e35780639c8f9f231461030e576100fe565b8063443cb4bc116100d1578063443cb4bc146101e357806354cf2aeb1461020e5780635a76f25e1461023957806364eca46c14610264576100fe565b8063054d50d4146101035780630b65092d1461014057806334e199071461017d5780633e619210146101a6575b600080fd5b34801561010f57600080fd5b5061012a60048036038101906101259190611678565b610426565b60405161013791906116da565b60405180910390f35b34801561014c57600080fd5b5061016760048036038101906101629190611753565b61051d565b60405161017491906116da565b60405180910390f35b34801561018957600080fd5b506101a4600480360381019061019f9190611780565b610535565b005b3480156101b257600080fd5b506101cd60048036038101906101c891906117ad565b61058b565b6040516101da91906116da565b60405180910390f35b3480156101ef57600080fd5b506101f86107ff565b60405161020591906116da565b60405180910390f35b34801561021a57600080fd5b50610223610805565b60405161023091906116da565b60405180910390f35b34801561024557600080fd5b5061024e61080b565b60405161025b91906116da565b60405180910390f35b34801561027057600080fd5b5061028b600480360381019061028691906117ad565b610811565b60405161029891906116da565b60405180910390f35b3480156102ad57600080fd5b506102b6610a85565b005b3480156102c457600080fd5b506102cd610a99565b6040516102da919061184c565b60405180910390f35b3480156102ef57600080fd5b506102f8610abd565b6040516103059190611876565b60405180910390f35b34801561031a57600080fd5b5061033560048036038101906103309190611780565b610ae7565b604051610343929190611891565b60405180910390f35b34801561035857600080fd5b50610361610d7a565b60405161036e91906118db565b60405180910390f35b34801561038357600080fd5b5061038c610d9e565b60405161039991906116da565b60405180910390f35b6103bc60048036038101906103b79190611780565b610da4565b6040516103c991906116da565b60405180910390f35b3480156103de57600080fd5b506103e7611136565b6040516103f491906116da565b60405180910390f35b34801561040957600080fd5b50610424600480360381019061041f9190611753565b61113c565b005b600080841161046a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046190611953565b60405180910390fd5b60008311801561047a5750600082115b6104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b0906119bf565b60405180910390fd5b60006004546103e86104cb9190611a0e565b856104d69190611a42565b9050600083826104e69190611a42565b90506000826103e8876104f99190611a42565b6105039190611a84565b905080826105119190611ae7565b93505050509392505050565b60056020528060005260406000206000915090505481565b61053d6111bf565b601e811115610581576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057890611b64565b60405180910390fd5b8060048190555050565b600061059561123d565b600083116105d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cf90611953565b60405180910390fd5b6105e783600254600354610426565b90508181101561062c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062390611bd0565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161068993929190611bf0565b6020604051808303816000875af11580156106a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cc9190611c5f565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610728929190611c8c565b6020604051808303816000875af1158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b9190611c5f565b50826002600082825461077e9190611a84565b9250508190555080600360008282546107979190611a0e565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fcc65e4d9060ece2ecf63011ac580550b04c8daeba63fac4dfe8669353cd88859848360016040516107e993929190611cc4565b60405180910390a26107f961128c565b92915050565b60025481565b60045481565b60035481565b600061081b61123d565b6000831161085e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085590611953565b60405180910390fd5b61086d83600354600254610426565b9050818110156108b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a990611bd0565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161090f93929190611bf0565b6020604051808303816000875af115801561092e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109529190611c5f565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016109ae929190611c8c565b6020604051808303816000875af11580156109cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f19190611c5f565b508260036000828254610a049190611a84565b925050819055508060026000828254610a1d9190611a0e565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fcc65e4d9060ece2ecf63011ac580550b04c8daeba63fac4dfe8669353cd8885984836000604051610a6f93929190611cc4565b60405180910390a2610a7f61128c565b92915050565b610a8d6111bf565b610a976000611296565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080610af261123d565b60008311610b35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2c90611d47565b60405180910390fd5b82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610bb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bae90611db3565b60405180910390fd5b60065460025484610bc89190611a42565b610bd29190611ae7565b915060065460035484610be59190611a42565b610bef9190611ae7565b9050600082118015610c015750600081115b610c40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c37906119bf565b60405180910390fd5b610c4a338461135c565b8160026000828254610c5c9190611a0e565b925050819055508060036000828254610c759190611a0e565b925050819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610cd7929190611c8c565b6020604051808303816000875af1158015610cf6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1a9190611c5f565b503373ffffffffffffffffffffffffffffffffffffffff167f59c3a0b60c6ab7deb62e1440c9e72441db6db7dfe514dba8cb18e60c0d896efa838386604051610d6593929190611dd3565b60405180910390a2610d7561128c565b915091565b7f000000000000000000000000000000000000000000000000000000000000000081565b6103e881565b6000610dae61123d565b600034118015610dbe5750600082115b610dfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df490611e56565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b158015610e6557600080fd5b505af1158015610e79573d6000803e3d6000fd5b50505050506000349050600080600254148015610e9857506000600354145b15610ed5578390506103e8610eb78284610eb29190611a42565b6113cf565b610ec19190611a0e565b9250610ed060006103e86114c8565b610fb5565b60025460035483610ee69190611a42565b610ef09190611ae7565b9050838111610f0157349150610f74565b60035460025485610f129190611a42565b610f1c9190611ae7565b91508390503373ffffffffffffffffffffffffffffffffffffffff166108fc8334610f479190611a0e565b9081150290604051600060405180830381858888f19350505050158015610f72573d6000803e3d6000fd5b505b610fb260025460065484610f889190611a42565b610f929190611ae7565b60035460065484610fa39190611a42565b610fad9190611ae7565b61153b565b92505b60008311610ff8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fef90611ec2565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161105593929190611bf0565b6020604051808303816000875af1158015611074573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110989190611c5f565b5081600260008282546110ab9190611a84565b9250508190555080600360008282546110c49190611a84565b925050819055506110d533846114c8565b3373ffffffffffffffffffffffffffffffffffffffff167fbeb3885786d637a474cbc287c0a44587231633a077f0bd30354d5a4b18996fce83838660405161111f93929190611dd3565b60405180910390a2505061113161128c565b919050565b60065481565b6111446111bf565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111aa90611f54565b60405180910390fd5b6111bc81611296565b50565b6111c7611554565b73ffffffffffffffffffffffffffffffffffffffff166111e5610abd565b73ffffffffffffffffffffffffffffffffffffffff161461123b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123290611fc0565b60405180910390fd5b565b600260005403611282576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112799061202c565b60405180910390fd5b6002600081905550565b6001600081905550565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113ab9190611a0e565b9250508190555080600660008282546113c49190611a0e565b925050819055505050565b60008082036113e157600090506114c3565b600060016113ee8461155c565b901c6001901b9050600181848161140857611407611ab8565b5b048201901c9050600181848161142157611420611ab8565b5b048201901c9050600181848161143a57611439611ab8565b5b048201901c9050600181848161145357611452611ab8565b5b048201901c9050600181848161146c5761146b611ab8565b5b048201901c9050600181848161148557611484611ab8565b5b048201901c9050600181848161149e5761149d611ab8565b5b048201901c90506114bf818285816114b9576114b8611ab8565b5b0461153b565b9150505b919050565b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546115179190611a84565b9250508190555080600660008282546115309190611a84565b925050819055505050565b600081831061154a578161154c565b825b905092915050565b600033905090565b600080600090506000608084901c111561157e57608083901c92506080810190505b6000604084901c111561159957604083901c92506040810190505b6000602084901c11156115b457602083901c92506020810190505b6000601084901c11156115cf57601083901c92506010810190505b6000600884901c11156115ea57600883901c92506008810190505b6000600484901c111561160557600483901c92506004810190505b6000600284901c111561162057600283901c92506002810190505b6000600184901c1115611634576001810190505b80915050919050565b600080fd5b6000819050919050565b61165581611642565b811461166057600080fd5b50565b6000813590506116728161164c565b92915050565b6000806000606084860312156116915761169061163d565b5b600061169f86828701611663565b93505060206116b086828701611663565b92505060406116c186828701611663565b9150509250925092565b6116d481611642565b82525050565b60006020820190506116ef60008301846116cb565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611720826116f5565b9050919050565b61173081611715565b811461173b57600080fd5b50565b60008135905061174d81611727565b92915050565b6000602082840312156117695761176861163d565b5b60006117778482850161173e565b91505092915050565b6000602082840312156117965761179561163d565b5b60006117a484828501611663565b91505092915050565b600080604083850312156117c4576117c361163d565b5b60006117d285828601611663565b92505060206117e385828601611663565b9150509250929050565b6000819050919050565b600061181261180d611808846116f5565b6117ed565b6116f5565b9050919050565b6000611824826117f7565b9050919050565b600061183682611819565b9050919050565b6118468161182b565b82525050565b6000602082019050611861600083018461183d565b92915050565b61187081611715565b82525050565b600060208201905061188b6000830184611867565b92915050565b60006040820190506118a660008301856116cb565b6118b360208301846116cb565b9392505050565b60006118c582611819565b9050919050565b6118d5816118ba565b82525050565b60006020820190506118f060008301846118cc565b92915050565b600082825260208201905092915050565b7f496e76616c696420696e70757420616d6f756e74000000000000000000000000600082015250565b600061193d6014836118f6565b915061194882611907565b602082019050919050565b6000602082019050818103600083015261196c81611930565b9050919050565b7f496e73756666696369656e74206c697175696469747900000000000000000000600082015250565b60006119a96016836118f6565b91506119b482611973565b602082019050919050565b600060208201905081810360008301526119d88161199c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a1982611642565b9150611a2483611642565b9250828203905081811115611a3c57611a3b6119df565b5b92915050565b6000611a4d82611642565b9150611a5883611642565b9250828202611a6681611642565b91508282048414831517611a7d57611a7c6119df565b5b5092915050565b6000611a8f82611642565b9150611a9a83611642565b9250828201905080821115611ab257611ab16119df565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611af282611642565b9150611afd83611642565b925082611b0d57611b0c611ab8565b5b828204905092915050565b7f46656520746f6f20686967680000000000000000000000000000000000000000600082015250565b6000611b4e600c836118f6565b9150611b5982611b18565b602082019050919050565b60006020820190508181036000830152611b7d81611b41565b9050919050565b7f496e73756666696369656e74206f757470757420616d6f756e74000000000000600082015250565b6000611bba601a836118f6565b9150611bc582611b84565b602082019050919050565b60006020820190508181036000830152611be981611bad565b9050919050565b6000606082019050611c056000830186611867565b611c126020830185611867565b611c1f60408301846116cb565b949350505050565b60008115159050919050565b611c3c81611c27565b8114611c4757600080fd5b50565b600081519050611c5981611c33565b92915050565b600060208284031215611c7557611c7461163d565b5b6000611c8384828501611c4a565b91505092915050565b6000604082019050611ca16000830185611867565b611cae60208301846116cb565b9392505050565b611cbe81611c27565b82525050565b6000606082019050611cd960008301866116cb565b611ce660208301856116cb565b611cf36040830184611cb5565b949350505050565b7f496e76616c6964204c5020746f6b656e73000000000000000000000000000000600082015250565b6000611d316011836118f6565b9150611d3c82611cfb565b602082019050919050565b60006020820190508181036000830152611d6081611d24565b9050919050565b7f496e73756666696369656e74204c502062616c616e6365000000000000000000600082015250565b6000611d9d6017836118f6565b9150611da882611d67565b602082019050919050565b60006020820190508181036000830152611dcc81611d90565b9050919050565b6000606082019050611de860008301866116cb565b611df560208301856116cb565b611e0260408301846116cb565b949350505050565b7f496e76616c696420616d6f756e74730000000000000000000000000000000000600082015250565b6000611e40600f836118f6565b9150611e4b82611e0a565b602082019050919050565b60006020820190508181036000830152611e6f81611e33565b9050919050565b7f496e73756666696369656e74206c6971756964697479206d696e746564000000600082015250565b6000611eac601d836118f6565b9150611eb782611e76565b602082019050919050565b60006020820190508181036000830152611edb81611e9f565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611f3e6026836118f6565b9150611f4982611ee2565b604082019050919050565b60006020820190508181036000830152611f6d81611f31565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611faa6020836118f6565b9150611fb582611f74565b602082019050919050565b60006020820190508181036000830152611fd981611f9d565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612016601f836118f6565b915061202182611fe0565b602082019050919050565b6000602082019050818103600083015261204581612009565b905091905056fea26469706673582212207af6d68d2bc3788a6c56157c69e302078a4a9c2c59c53bf23a046cc7bd7a92bf64736f6c63430008130033";

type HybridPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HybridPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HybridPool__factory extends ContractFactory {
  constructor(...args: HybridPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _weth: AddressLike,
    _usdc: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_weth, _usdc, overrides || {});
  }
  override deploy(
    _weth: AddressLike,
    _usdc: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_weth, _usdc, overrides || {}) as Promise<
      HybridPool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): HybridPool__factory {
    return super.connect(runner) as HybridPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HybridPoolInterface {
    return new Interface(_abi) as HybridPoolInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): HybridPool {
    return new Contract(address, _abi, runner) as unknown as HybridPool;
  }
}
